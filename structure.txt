 public
│   ├── Images
│   │   └── CAPACITI-LOGO.jpg
│   └── vite.svg
│   └── _redirects
├── src
│   ├── assets
│   │   └── react.svg
│   ├── components
│   │   ├── common
│   │   │   └── Calendar.tsx
│   │   │   └── DataTable.tsx
│   │   │   └── Dropdown.tsx
│   │   │   └── FileUpload.tsx
│   │   │   └── FormInput.tsx
│   │   │   └── Modal.tsx
│   │   │   └── Navbar.tsx
│   │   │   └── Sidebar.tsx
│   ├── pages
│   │   ├── Admin
│   │   │   └── AdminAuth.tsx
│   │   │   └── AdminDashboard.tsx
│   │   │   └── EmployerMetrics.tsx
│   │   │   └── ManageUsers.tsx
│   │   │   └── PlacementAnalytics.tsx
│   │   │   └── PlacementTracker.tsx
│   │   ├── Employer
│   │   │   └── EmployerAuth.tsx
│   │   │   └── EmployerDashboard.tsx
│   │   │   └── MatchedCandidates.tsx
│   │   │   └── PostJob.tsx
│   │   │   └── ScheduleInterviews.tsx
│   │   ├── Graduate
│   │   │   └── ApplyJob.tsx
│   │   │   └── GraduateAuth.tsx
│   │   │   └── GraduateDashboard.tsx
│   │   │   └── GraduateProfile.tsx
│   │   │   └── ViewJobs.tsx
│   │   └── ForgotPassword.tsx
│   │   └── Welcome.jsx
│   ├── routes
│   │   └── AppRoutes.tsx
│   ├── services
│   │   └── authService.ts
│   │   └── interviewService.ts
│   │   └── jobService.ts
│   │   └── matchService.ts
│   ├── styles
│   │   └── AdminAuth.css
│   │   └── EmployerAuth.css
│   │   └── GraduateAuth.css
│   │   └── Profile.css
│   │   └── Welcome.css
│   └── App.css
│   └── App.jsx
│   └── firebase.js
│   └── index.css
│   └── main.jsx
└── .gitignore
└── eslint.config.js
└── index.html
└── package-lock.json
└── package.json
└── README.md
└── vite.config.js

✅ PowerShell Script for Clean Project Structure (Only Folders & Files, No node_modules, .git, etc.)
Copy and paste this into your PowerShell terminal:

$excluded = @("node_modules", ".git", "dist", "build", "coverage", "out", ".next", "obj", "bin")

function Show-Tree {
    param (
        [string]$Path = ".",
        [string]$Indent = "",
        [bool]$IsLast = $true
    )

    $items = Get-ChildItem -LiteralPath $Path | Where-Object { $excluded -notcontains $_.Name }
    $itemCount = $items.Count

    for ($i = 0; $i -lt $itemCount; $i++) {
        $item = $items[$i]
        $isLastItem = ($i -eq $itemCount - 1)
        $connector = if ($isLastItem) { "└── " } else { "├── " }

        Write-Host "$Indent$connector$($item.Name)"

        if ($item.PSIsContainer) {
            if ($isLastItem) {
                $newIndent = "$Indent    "
            } else {
                $newIndent = "$Indent│   "
            }
            Show-Tree -Path $item.FullName -Indent $newIndent -IsLast $isLastItem
        }
    }
}

Show-Tree
